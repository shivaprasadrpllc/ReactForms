.header {
  height: 40px;
  background-color: white;
  align-items: center;
  display: flex;
  padding: 0px 15px;
}

.grid {
  margin: 15px;
  background: white;
  height: calc(100vh - 70px);
  width: 100%;
}

.action-div {
  height: 40px;
  padding: 5px 0px;
  align-items: center;
}

.cu-btn {
  display: inline-block;
  padding: 3px 10px;
  border-radius: 2px;
  color: var(--main-btn-color);
  font-size: 12px;
  font-weight: bold;
  border: 1px solid var(--main-btn-color);
  cursor: pointer;
}

.btn-selected {
  background: var(--main-btn-color) !important;
  color: white !important;
}

.grid-head {
  color: var(--main-btn-color);
  background-color: #ece9f2;
  border-bottom: 1px solid #ccc;
}

th {
  border: none !important;
}

label.containerC {
  display: block;
  position: relative;
  padding-left: 20px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  margin-left: 5px;
}

/* Hide the browser's default checkbox */
label.containerC input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 12px;
  width: 12px;
  background-color: white;
  border: 1px solid var(--main-btn-color);
  box-shadow: 0px 0px 3px 0px #888888;
}

/* On mouse-over, add a grey background color */
label.containerR:hover input~.checkmark {
  background-color: var(--main-btn-color);
}

/* When the checkbox is checked, add a blue background */
label.containerC input:checked~.checkmark {
  background-color: var(--main-btn-color);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
label.containerC input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
label.containerC .checkmark:after {
  left: 3px;
  top: 0px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);

}

.oppDiv {
  position: absolute;
  top: 2px;
  width: 100%;
  background: white;
  min-height: 300px;
  border: 1px solid #ccc;
  box-shadow: 1px 1px 2px #ccc;
  padding: 10px;
}

.add-header {
  height: 30px;
  background-color: #ece9f3;
  align-items: center;
  display: flex;
  padding: 0px 10px;
}

.add-body {
  border: 1px solid #ece9f3;
  padding: 10px 20px;
}

.cu-control {
  height: 30px;
  border-radius: 2px;
  background-color: #f7f7f7;
  font-size: 13px;
}

.ac-div {
  padding: 0px 10px;
}

.ac-div>div {
  margin-bottom: 10px;
}

.ac-div>div>label {
  margin-bottom: 0px;
  font-size: 12px;
}



// radio Button

/* The container */
label.containerR {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 20px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
label.containerR input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmarkR {
  position: absolute;
  top: 0;
  left: 0;
  height: 12px;
  width: 12px;
  background-color: #eee;
  border: 1px solid var(--main-btn-color);
  box-shadow: 0px 0px 3px 0px #888888;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
label.containerR:hover input~.checkmarkR {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
label.containerR input:checked~.checkmarkR {
  background-color: white;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmarkR:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
label.containerR input:checked~.checkmarkR:after {
  display: block;
}

/* Style the indicator (dot/circle) */
label.containerR .checkmarkR:after {
  top: 1px;
  left: 1px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--main-btn-color);
}

.opInfoTbody {
  border: 1px solid #ccc;
  background-color: #f7f7f7;
}

.opInfoTbody>tr {
  border-bottom: 1px solid #ccc;
  height: 27px;
}

.opInfoTbody>tr>td {
  align-items: center;
}

.addCityDiv {
  border: 1px solid #ccc;
  position: absolute;
  z-index: 1000;
  background: #f7f7f7;
  top: 60px;
  box-shadow: 1px 1px 1px #ccc;
}

.addCityDiv::before {
  content: '';
  position: absolute;
  transform: rotate(45deg);
  width: 14px;
  height: 14px;
  right: 10px;
  top: -5px;
  /* background: #f5f5f5; */
  background-color: #f7f7f7;
  z-index: -1;
  box-shadow: -1px -1px 0px 0px #d5d9dc;
}

.nac-div {
  margin-bottom: -8px;
}

.addCityDiv .cu-control {
  background-color: white;
  font-size: 13px;
}

.gridCountInfo {
  margin-top: -20px;
}

.cu-dots {
  position: absolute;
  top: 30px;
  right: 10px;
}
